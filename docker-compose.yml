version: '3.8'

services:
  web:
    build: .
    command: python main.py
    volumes:
      - .:/app
    ports:
      - 8000:8000
    environment:
      FASTAPI_SERVICE_PORT: 8000
      FASTAPI_SERVICE_HOST: 0.0.0.0
      FASTAPI_SERVICE_MONGO_USERNAME: mongoadmin
      FASTAPI_SERVICE_MONGO_PASSWORD: mongoadmin
      FASTAPI_SERVICE_MONGO_HOST: mongo
      FASTAPI_SERVICE_MONGO_PORT: 27017
      FASTAPI_SERVICE_KAFKA_HOST: kafka
      FASTAPI_SERVICE_KAFKA_PORT: 9092
    env_file:
      - ./.env

  mongo:
    image: mongo:4.1.6
    ports:
      - 27017:27017
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongoadmin
    env_file:
      - ./.env

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
      - kafka-ui
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:22181"